// <auto-generated />
using System;
using Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(LinksDbContext))]
    [Migration("20231218182744_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("links")
                .HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Core.Entities.Bio", b =>
                {
                    b.Property<string>("BioId")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTimeOffset>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2023, 12, 18, 18, 27, 44, 635, DateTimeKind.Unspecified).AddTicks(6846), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Image")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("MemberId")
                        .HasColumnType("varchar(25)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2023, 12, 18, 18, 27, 44, 635, DateTimeKind.Unspecified).AddTicks(7561), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Url")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("BioId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("MemberId");

                    b.ToTable("Bios", "links");
                });

            modelBuilder.Entity("Core.Entities.ButtonLink", b =>
                {
                    b.Property<string>("ButtonLinkId")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Body")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<int>("ButtonLinkType")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2023, 12, 18, 18, 27, 44, 636, DateTimeKind.Unspecified).AddTicks(8383), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Icon")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2023, 12, 18, 18, 27, 44, 636, DateTimeKind.Unspecified).AddTicks(8786), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Url")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.HasKey("ButtonLinkId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("ButtonLink", "links");
                });

            modelBuilder.Entity("Core.Entities.Content", b =>
                {
                    b.Property<string>("ContentId")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("BioId")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Body")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2023, 12, 18, 18, 27, 44, 636, DateTimeKind.Unspecified).AddTicks(9798), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Icon")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2023, 12, 18, 18, 27, 44, 637, DateTimeKind.Unspecified).AddTicks(103), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Url")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.HasKey("ContentId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("BioId");

                    b.ToTable("Contents", "links");
                });

            modelBuilder.Entity("Core.Entities.Member", b =>
                {
                    b.Property<string>("MemberId")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTimeOffset>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2023, 12, 18, 18, 27, 44, 637, DateTimeKind.Unspecified).AddTicks(973), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2023, 12, 18, 18, 27, 44, 637, DateTimeKind.Unspecified).AddTicks(1245), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("MemberId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("Members", "links");

                    b.HasData(
                        new
                        {
                            MemberId = "User_kc6alletqg",
                            CreateAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "Scott.l.griffin@gmail.com",
                            FirstName = "Scott",
                            IsDeleted = 0,
                            LastName = "Griffin",
                            MemberType = 2,
                            Status = 2,
                            UpdateAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Core.Entities.SocialMedia", b =>
                {
                    b.Property<string>("SocialMediaId")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("BioId")
                        .HasColumnType("varchar(25)");

                    b.Property<DateTimeOffset>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2023, 12, 18, 18, 27, 44, 637, DateTimeKind.Unspecified).AddTicks(2309), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Icon")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("SocialMediaType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2023, 12, 18, 18, 27, 44, 637, DateTimeKind.Unspecified).AddTicks(2570), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("Url")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("SocialMediaId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("BioId");

                    b.ToTable("SocialMedias", "links");
                });

            modelBuilder.Entity("Core.Entities.Bio", b =>
                {
                    b.HasOne("Core.Entities.Member", null)
                        .WithMany("Bios")
                        .HasForeignKey("MemberId");
                });

            modelBuilder.Entity("Core.Entities.Content", b =>
                {
                    b.HasOne("Core.Entities.Bio", null)
                        .WithMany("Contents")
                        .HasForeignKey("BioId");
                });

            modelBuilder.Entity("Core.Entities.SocialMedia", b =>
                {
                    b.HasOne("Core.Entities.Bio", null)
                        .WithMany("SocialMedias")
                        .HasForeignKey("BioId");
                });

            modelBuilder.Entity("Core.Entities.Bio", b =>
                {
                    b.Navigation("Contents");

                    b.Navigation("SocialMedias");
                });

            modelBuilder.Entity("Core.Entities.Member", b =>
                {
                    b.Navigation("Bios");
                });
#pragma warning restore 612, 618
        }
    }
}
